# Based on https://squidfunk.github.io/mkdocs-material/publishing-your-site/#with-github-actions-material-for-mkdocs

name: "wolfmanstout/deploy-repo-guide"
description: "Deploy repo-guide docs to GitHub Pages"
inputs:
  gemini-key:
    description: "Gemini API key"
    required: true
  directory:
    description: "Directory to deploy"
    required: false
    default: "."
  remote-name:
    description: "Name of the remote repository"
    required: false
    default: "origin"
  token-budget:
    description: "Approximate maximum number of tokens to use (0 for unlimited). Tokens are counted after each LLM call, so the actual number may be higher."
    required: false
    default: 0
  files-token-limit:
    description: "Maximum number of tokens for total file contents in a directory (0 for unlimited). Truncate file list if exceeded."
    required: false
    default: 0
  google-analytics-id:
    description: "Google Analytics ID to add to the MkDocs configuration"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Configure Git Credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      working-directory: ${{ inputs.directory }}
      shell: bash
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - run: pip install repo-guide mkdocs mkdocs-material bleach bleach-allowlist
      shell: bash
    - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      shell: bash
    - uses: actions/cache@v4
      with:
        key: mkdocs-material-${{ env.cache_id }}
        path: .cache
        restore-keys: |
          mkdocs-material-
    - name: Build the docs
      env:
        LLM_GEMINI_KEY: ${{ inputs.gemini-key }}
      run: repo-guide . -v --no-serve --rename-dot-github --token-budget="${{ inputs.token-budget }}" --files-token-limit="${{ inputs.files-token-limit }}" --google-analytics-id="${{ inputs.google-analytics-id }}"
      working-directory: ${{ inputs.directory }}
      shell: bash
    - name: Deploy the docs
      run: mkdocs gh-deploy --force --config-file generated_docs/mkdocs.yml --remote-name "${{ inputs.remote-name }}"
      working-directory: ${{ inputs.directory }}
      shell: bash
